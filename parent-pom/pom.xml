<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd;">
  <modelVersion>4.0.0</modelVersion>

  <groupId>nl.knaw.meertens.clariah.vre</groupId>
  <artifactId>clariah-wp3-vre</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Clariah WP3 VRE Parent</name>

  <properties>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <checkstyle.config.location>https://raw.githubusercontent.com/knaw-huc/checkstyle/master/checkstyle_config.xml</checkstyle.config.location>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <maven-assembly-plugin.version>3.1.1</maven-assembly-plugin.version>
    <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
    <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
    <maven-surefire-plugin.version>2.21.0</maven-surefire-plugin.version>

    <activation.version>1.1.1</activation.version>
    <assertj-core.version>3.9.0</assertj-core.version>
    <awaitility.version>3.1.6</awaitility.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-configuration.version>1.10</commons-configuration.version>
    <commons-lang.version>3.7</commons-lang.version>
    <guava.version>23.6-jre</guava.version>
    <httpclient.version>4.5.2</httpclient.version>
    <jackson-databind.version>2.9.10.8</jackson-databind.version>
    <javax.activation.version>1.1.1</javax.activation.version>
    <javax-activation-sun.version>1.2.0</javax-activation-sun.version>
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <jaxb-api.version>2.4.0-b180725.0427</jaxb-api.version>
    <jaxb-core.version>2.3.0.1</jaxb-core.version>
    <jaxb-impl.version>2.4.0-b180830.0438</jaxb-impl.version>
    <jaxb2-maven-plugin.version>2.3.1</jaxb2-maven-plugin.version>
    <jaxrs.version>2.1</jaxrs.version>
    <jdom.version>2.0.2</jdom.version>
    <jersey.version>2.27</jersey.version>
    <json-path.version>2.3.0</json-path.version>
    <json-unit-fluent.version>1.28.1</json-unit-fluent.version>
    <jsoup.version>1.8.3</jsoup.version>
    <junit.version>4.12</junit.version>
    <kafka.version>2.0.0</kafka.version>
    <kafka-clients.version>2.0.0</kafka-clients.version>
    <logback.version>1.3.0-alpha4</logback.version>
    <mockito-core.version>2.21.0</mockito-core.version>
    <mockserver.version>5.4.1</mockserver.version>
    <postgresql.version>9.1-901-1.jdbc4</postgresql.version>
    <reflections.version>0.9.11</reflections.version>
    <Saxon-HE.version>9.8.0-12</Saxon-HE.version>
    <SaxonUtils.version>1.0-SNAPSHOT</SaxonUtils.version>
    <SchemAnon.version>1.1.0</SchemAnon.version>
    <slf4j-api.version>1.8.0-beta4</slf4j-api.version>
    <surefire-junit.version>2.4.3</surefire-junit.version>
    <unirest-java.version>1.4.9</unirest-java.version>

  </properties>

  <dependencies>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <!-- rest api -->
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>${jaxrs.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- Kafka -->
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.12</artifactId>
      <version>${kafka.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>jmxri</artifactId>
          <groupId>com.sun.jmx</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jms</artifactId>
          <groupId>javax.jms</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jmxtools</artifactId>
          <groupId>com.sun.jdmk</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka-clients.version}</version>
    </dependency>

    <!-- util -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.mashape.unirest</groupId>
      <artifactId>unirest-java</artifactId>
      <version>${unirest-java.version}</version>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>${json-path.version}</version>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-jdk-http</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>net.javacrumbs.json-unit</groupId>
      <artifactId>json-unit-fluent</artifactId>
      <version>${json-unit-fluent.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- mock server -->
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty</artifactId>
      <version>${mockserver.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-client-java</artifactId>
      <version>${mockserver.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- add missing modules -->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>${javax.activation.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>${javax.annotation-api.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>${jaxb-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${jaxb-impl.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>${jaxb-core.version}</version>
    </dependency>

  </dependencies>

  <distributionManagement>
    <snapshotRepository>
      <id>huygens-repository</id>
      <url>${parent-pom-repo}</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
    <repository>
      <id>huygens-repository</id>
      <url>${parent-pom-repo}</url>
      <uniqueVersion>false</uniqueVersion>
    </repository>
  </distributionManagement>

  <build>
    <plugins>
      <!-- checkstyle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <executions>
          <execution>
            <id>checkstyle-compile</id>
            <phase>compile</phase>
            <configuration>
              <configLocation>${checkstyle.config.location}</configLocation>
              <encoding>${project.build.sourceEncoding}</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <!-- Excludes when package name contains 'generated': -->
              <excludes>**/generated/**/*</excludes>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>**/generated-sources/**/*</excludes>
        </configuration>
      </plugin>
    </plugins>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>3.0.0</version>
      </extension>
    </extensions>

  </build>
</project>